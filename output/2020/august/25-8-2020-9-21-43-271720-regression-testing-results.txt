==================================================Automating incremental regression testing of my software	solution for genetic technology mapping.=	Process the first input argument.=	Create a file object for reading.-	-	-	-	-	-	-	-	-	-	-	-	-=	Testing the statistical analysis package.==	Testing class: statistical_analysis	Number of initial test cases passed: 0			OK	Number of initial test cases used: 0			OK	Proportion of initial test cases passed: 0		OK	Test case number is: 1					OK.	Number of test cases passed: 1				OK	Number of test cases used: 1				OK	Proportion of test cases passed: 100.0			OK	Test case number is: 2					OK.	Number of test cases passed: 2				OK	Number of test cases used: 2				OK	Proportion of test cases passed: 100.0			OK	Test case number is: 3					OK.	Number of test cases passed: 3				OK	Number of test cases used: 3				OK	Proportion of test cases passed: 100.0			OK	Test case number is: 4					OK.	Number of test cases passed: 4				OK	Number of test cases used: 4				OK	Proportion of test cases passed: 100.0			OK	Test case number is: 5					OK.	Number of test cases passed: 5				OK	Number of test cases used: 5				OK	Proportion of test cases passed: 100.0			OK	Test case number is: 6					OK.	Number of test cases passed: 6				OK	Number of test cases used: 6				OK	Proportion of test cases passed: 100.0			OK==	Testing class: data_type_n_number_ops.	Testing is_list_of_numbers() method.	... Test: is_list_of_numbers(None) == False		OK	... Test: is_list_of_numbers(not_a_list_obj) == False	OK	... Test: is_list_of_numbers([]) == False		OK	... Test: is_list...numb(lst_not_pure_numb_1) == False	OK	... Test: is_list...numb(lst_not_pure_numb_2) == False	OK	... Test: is_list...numb(lst_not_pure_numb_3) == False	OK	... Test: is_list...numb(lst_not_pure_numb_4) == False	OK	... Test: is_list...numb(lst_not_pure_numb_5) == False	OK	... Test: is_list...numb(lst_pure_pos_integers) == True	OK	... Test: is_list...numb(lst_integers_not_pos) == True	OK	... Test: is_list...numb(lst_integers_neg_0) == True	OK	... Test: is_list...numb(lst_pure_fp_num) == True	OK	... Test: is_list...numb(lst_pure_neg_fp_num) == True	OK	... Test: is_list...numb(lst_pure_0s) == True		OK	... Test: is_list...numb([0]) == True			OK	... Test: is_list...numb([-56970]) == True		OK	... Test: is_list...numb([723]) == True			OK	... Test: is_list...numb(lst_fp_int_only) == True	OK	Testing is_tuple_of_tuples() method.	... Test: is_tuple_of_tuples(None) == False		OK	... Test: is_tuple_of_tuples(not_a_tuple_obj) == False	OK	... Test: is_tuple_of_tuples(()) == False		OK	... Test: is_tup_of_tups(tuple of numbers) == False	OK	... Test: is...(tuple of numbers & strings) == False	OK	... Test: is_tup_of_tups(tuple of a tuple - 1) == True	OK	... Test: is_t_of_ts(tuple of a tuple - 2) == True	OK	... Test: is_t_of_ts(tuple of a tuple - 3) == True	OK	... Test: is_t_of_ts(tup of tups & object) == False	OK	... Test: is_t_of_ts(tup of tups & string) == False	OK	... Test: is_t_of_ts(tup of tups & number) == False	OK	... Test: is_t_of_ts(tup of tups) == True		OK	... is_t_of_ts(t of ts) == True, subtup with tuple	OK	Testing is_elem_in_tuple_of_tuples() method.	... i/p arguments: (None,None) => False			OK	... i/p args: (not_a_tuple_obj,tuple) => False		OK	i/p args: (None,tuple_of_tuples) => False		OK	i/p args: ('not found',tuple_of_tuples) => False	OK	i/p args: (21.3243,tuple_of_tuples) => False		OK	i/p args: (6734,tuple_of_tuples) => False		OK	i/p args: (random_obj,tuple_of_tuples) => False		OK	i/p args: (not_a_tuple_obj,tuple_of_tuples) => True	OK	i/p args: (46,tuple_of_tuples) => True			OK	i/p args: ('Hola todos',tuple_of_tuples) => True	OK	i/p args: (object_b,tuple_of_tuples) => True		OK	i/p args: (None,another_tuple_of_tuples) => True	OK	i/p args: (a_tuple,another_tuple_of_tuples) => True	OK	Testing is_binary_string() method.	... Test: is_binary_string(None) == False		OK	... Test: is_binary_string(not_a_bin_str) == False	OK	... Test: is_binary_string('') == False			OK	... Test: is_binary_string(23) == False			OK	... Test: is_binary_string('23') == False		OK	... Test: is_binary_string('0b728346') == False		OK	... Test: is_binary_string('0101101') == True		OK	... Test: is_binary_string('0b0001101') == True		OK	... Test: is_binary_string('1101') == True		OK	... Test: is_binary_string('0b10101011') == True	OK	Testing convert_bin_str_to_list_of_0s_1s() method.	... Test: convert_bin_str_to_0_1_list(None) == None	OK	... Test: conv_binstr_to_0_1_list(not_bin_str) == None	OK	... Test: convert_bin_str_to_0_1_list('') == None	OK	... Test: convert_bin_str_to_list(23) == None		OK	... Test: convert_bin_str_to_list('23') == None		OK	... Test: convert_bin_str_to_list('1073262') == None	OK	... Test: '0' == [0]					OK	... Test: '010011' == [0,1,0,0,1,1]			OK	... Test: '00011011' == [0,0,0,1,1,0,1,1]		OK	... Test: '0b0' == [0]					OK	... Test: '0b01011' == [0,1,0,1,1]			OK	... Test: '110101' == [1,1,0,1,0,1]			OK	... Test: '1' == [1]					OK	... Test: '11' == [1,1]					OK	... Test: '0b1' == [1]					OK	... Test: '0b1101' == [1,1,0,1]				OK	... Test: '0b1000111' == [1,0,0,0,1,1,1]		OK-	-	-	-	-	-	-	-	-	-	-	-	-=	Testing the utilities package.=	Testing user-defined errors.-	-	-	-	-	-	-	-	-	-	-	-	-=	Testing the parsers package.-	-	-	-	-	-	-	-	-	-	-	-	-=	Testing the data_structures package.-	-	-	-	-	-	-	-	-	-	-	-	-==================================================>>	Get statistics of the software testing process.*	Number of test cases passed:		457*	Number of test cases used:		457*	Percentage of test cases passed:	100.0%.=	Close the file objects for reading (and writing).Update repository of simulation/experimental results.